package oop;
/*
	OOP (Object Oriented Programming)
	- 객체지향 프로그래밍
	- 객체를 정의하고 이 객체들 간에 상호작용을 구성해서 프로그램을 작성하는 기법
	- 재사용성 높고 유지보수 비용 절감
	
	Object		: 객체, 표현할 수 있는 모든 데이터
	- 일상에서 표현할 수 있는 모든 것을 객체라고 부름(관념적인 것, 물질적인 것 등)
	
	Class		: 클래스, 객체를 프로그램 코드로 작성한 것 (= 도면)
	
	Instance	: 인스턴스, Class를 컴퓨터 메모리에 생성한 것 (= 실체)
	
	클래스 작성법)
	class 클래스명 {		// 소괄호가 들어가면 무조건 함수(매서드)다. 중괄호와 헷갈리지 않게 주의
		1. 필드		멤버 변수. 객체의 속성을 표현(사람의 이름, 나이 등)
		2. 매서드		멤버 함수. 객체의 기능을 표현(사람이 밥을 먹는다, 논다 등)
	}
	
	인스턴스 생성법)
	1. 클래스명 변수명 = new 클래스명();		// Scanner, Random ...
	2. new 부분이 해당 클래스의 인스턴스를 생성하는 키워드
	3. 좌측의 변수는 생성한 인스턴스를 재사용하기 위해 참조 중인 변수		// java에서의 참조는 어떠한 대상을 지정하는 것을 의미
	
	※ oop의 4가지 특징
	1. 추상화		: 객체들의 공통점을 추출하여 정의한 것
	2. 상속		: 공통 부분은 물려 받아서 재사용성을 높인 것
	3. 다형성		: 객체들의 다양한 형태를 표현 및 집단 제어를위한 것
	4. 캠슐화		: 필요 기능들만 묶어서 객체의 완성도를 높인 것
 */
public class Ex01 {

}
